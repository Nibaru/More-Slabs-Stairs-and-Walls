plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
    }

    tasks.withType(JavaCompile) {

        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }

    tasks.withType(ProcessResources).configureEach {
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

        var replaceProperties = [
                minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                forge_version         : forge_version, forge_version_range: forge_version_range,
                loader_version_range: loader_version_range,
                mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                mod_authors         : mod_authors, mod_description: mod_description,
                fabric_loader_version: fabric_loader_version,
                sources : sources,
                homepage: homepage,
                issues  : issues,
        ]
        inputs.properties replaceProperties

        filesMatching(['META-INF/mods.toml', 'fabric.mod.json']) {
            expand replaceProperties + [project: project]
        }
    }
}


